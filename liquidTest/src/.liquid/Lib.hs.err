{"o_vars":null,"o_types":[[{"spanInfo":{"startLine":19,"endLine":19,"endCol":25,"startCol":14,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800763","(GHC.Maybe.Maybe GHC.Types.Int)"]]],[{"spanInfo":{"startLine":17,"endLine":17,"endCol":30,"startCol":18,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800761","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":14,"endLine":23,"endCol":36,"startCol":1,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800770","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":21,"endLine":23,"endCol":36,"startCol":28,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["GHC.Base.$fMonadIO","{v : (GHC.Base.Monad GHC.Types.IO) | v == $fMonadIO}"]]],[{"spanInfo":{"startLine":6,"endLine":6,"endCol":12,"startCol":1,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["GHC.Real.$fIntegralInt","{v : (GHC.Real.Integral GHC.Types.Int) | v == $fIntegralInt}"]]],[{"spanInfo":{"startLine":23,"endLine":23,"endCol":36,"startCol":28,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["Lib.someFunc","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":10,"startCol":9,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["b","GHC.Types.Int"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":19,"startCol":15,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[[null,"{VV : forall a .\n      x1:a -> {v : (GHC.Maybe.Maybe a) | (isJust v <=> true)\n                                         && fromJust v == x1} | VV == Just}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["Lib.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":29,"startCol":28,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["a","{v : GHC.Types.Int | v == a}"]]],[{"spanInfo":{"startLine":17,"endLine":17,"endCol":30,"startCol":9,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800762","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":31,"startCol":22,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800756","GHC.Types.Int"]]],[{"spanInfo":{"startLine":20,"endLine":20,"endCol":44,"startCol":27,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["System.IO.putStrLn","[GHC.Types.Char] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":8,"endLine":8,"endCol":10,"startCol":9,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["a","GHC.Types.Int"]]],[{"spanInfo":{"startLine":19,"endLine":19,"endCol":25,"startCol":24,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["b","{v : GHC.Types.Int | v == b}"]]],[{"spanInfo":{"startLine":19,"endLine":19,"endCol":23,"startCol":22,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["a","{v : GHC.Types.Int | v == a}"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":60,"startCol":34,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800766","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":8,"endLine":9,"endCol":31,"startCol":1,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800754","GHC.Prim.Int#"]]],[{"spanInfo":{"startLine":19,"endLine":23,"endCol":36,"startCol":9,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800764","(GHC.Maybe.Maybe GHC.Types.Int)"]]],[{"spanInfo":{"startLine":20,"endLine":20,"endCol":44,"startCol":36,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800768","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":20,"startCol":14,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[[null,"(GHC.Types.IO GHC.Types.Int)"]]],[{"spanInfo":{"startLine":21,"endLine":22,"endCol":60,"startCol":28,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800767","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":20,"startCol":14,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[[null,"(GHC.Types.IO GHC.Types.Int)"]]],[{"spanInfo":{"startLine":6,"endLine":6,"endCol":6,"startCol":1,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["Lib.myDiv","GHC.Types.Int -> {VV : GHC.Types.Int | VV /= 0} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":14,"endLine":14,"endCol":9,"startCol":1,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["Lib.someFunc","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":31,"startCol":30,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["ds_d1R1","GHC.Types.Int"]]],[{"spanInfo":{"startLine":20,"endLine":20,"endCol":43,"startCol":42,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["v","{v' : GHC.Types.Int | v' == v}"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":10,"startCol":9,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["a","GHC.Types.Int"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":30,"startCol":9,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800759","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":30,"startCol":18,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800758","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":8,"endLine":8,"endCol":8,"startCol":1,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["Lib.safeDiv","GHC.Types.Int -> GHC.Types.Int -> (GHC.Maybe.Maybe GHC.Types.Int)"]]],[{"spanInfo":{"startLine":8,"endLine":8,"endCol":22,"startCol":15,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[[null,"{VV : forall a .\n      {v : (GHC.Maybe.Maybe a) | isJust v <=> false} | VV == Nothing}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":31,"startCol":15,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800755","x1:GHC.Types.Int -> {v : (GHC.Maybe.Maybe GHC.Types.Int) | (isJust v <=> true)\n                                                           && fromJust v == x1}"]]]],"o_templs":[[{"spanInfo":{"startLine":19,"endLine":19,"endCol":25,"startCol":14,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800763","(GHC.Maybe.Maybe GHC.Types.Int)"]]],[{"spanInfo":{"startLine":17,"endLine":17,"endCol":30,"startCol":18,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800761","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":14,"endLine":23,"endCol":36,"startCol":1,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800770","{VV##559 : (GHC.Types.IO {VV##557 : () | $k_##558}) | $k_##560}"]]],[{"spanInfo":{"startLine":21,"endLine":23,"endCol":36,"startCol":28,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["GHC.Base.$fMonadIO","{lq_tmp$x##670 : (GHC.Base.Monad GHC.Types.IO) | lq_tmp$x##670 == GHC.Base.$fMonadIO}"]]],[{"spanInfo":{"startLine":6,"endLine":6,"endCol":12,"startCol":1,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["GHC.Real.$fIntegralInt","{lq_tmp$x##439 : (GHC.Real.Integral GHC.Types.Int) | lq_tmp$x##439 == GHC.Real.$fIntegralInt}"]]],[{"spanInfo":{"startLine":23,"endLine":23,"endCol":36,"startCol":28,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["Lib.someFunc","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":10,"startCol":9,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["b","GHC.Types.Int"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":19,"startCol":15,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[[null,"{VV : forall a .\n      lq_tmp$x##466:a -> {lq_tmp$x##464 : (GHC.Maybe.Maybe a) | (isJust lq_tmp$x##464 <=> true)\n                                                                && fromJust lq_tmp$x##464 == lq_tmp$x##466} | VV == GHC.Maybe.Just}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["Lib.$trModule","{VV##785 : GHC.Types.Module | $k_##786}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":29,"startCol":28,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["a","{lq_tmp$x##478 : GHC.Types.Int | lq_tmp$x##478 == a##ayc}"]]],[{"spanInfo":{"startLine":17,"endLine":17,"endCol":30,"startCol":9,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800762","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":31,"startCol":22,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800756","GHC.Types.Int"]]],[{"spanInfo":{"startLine":20,"endLine":20,"endCol":44,"startCol":27,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["System.IO.putStrLn","lq_tmp$x##720:[GHC.Types.Char] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":8,"endLine":8,"endCol":10,"startCol":9,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["a","GHC.Types.Int"]]],[{"spanInfo":{"startLine":19,"endLine":19,"endCol":25,"startCol":24,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["b","{lq_tmp$x##612 : GHC.Types.Int | lq_tmp$x##612 == b##aBO}"]]],[{"spanInfo":{"startLine":19,"endLine":19,"endCol":23,"startCol":22,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["a","{lq_tmp$x##611 : GHC.Types.Int | lq_tmp$x##611 == a##aBN}"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":60,"startCol":34,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800766","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":8,"endLine":9,"endCol":31,"startCol":1,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800754","{lq_tmp$x##458 : GHC.Prim.Int# | lq_tmp$x##458 == ds_d1R8}"]]],[{"spanInfo":{"startLine":19,"endLine":23,"endCol":36,"startCol":9,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800764","{lq_tmp$x##615 : (GHC.Maybe.Maybe GHC.Types.Int) | lq_tmp$x##615 == lq_anf$##7205759403792800763##d1Rx}"]]],[{"spanInfo":{"startLine":20,"endLine":20,"endCol":44,"startCol":36,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800768","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":20,"startCol":14,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[[null,"(GHC.Types.IO GHC.Types.Int)"]]],[{"spanInfo":{"startLine":21,"endLine":22,"endCol":60,"startCol":28,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800767","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":20,"startCol":14,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[[null,"(GHC.Types.IO GHC.Types.Int)"]]],[{"spanInfo":{"startLine":6,"endLine":6,"endCol":6,"startCol":1,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["Lib.myDiv","lq_tmp$x##424:GHC.Types.Int -> lq_tmp$x##425:{VV##0 : GHC.Types.Int | VV##0 /= 0} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":14,"endLine":14,"endCol":9,"startCol":1,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["Lib.someFunc","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":31,"startCol":30,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["ds_d1R1","{lq_tmp$x##479 : GHC.Types.Int | lq_tmp$x##479 == ds_d1R1}"]]],[{"spanInfo":{"startLine":20,"endLine":20,"endCol":43,"startCol":42,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["v","{lq_tmp$x##710 : GHC.Types.Int | lq_tmp$x##710 == v##aBP}"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":10,"startCol":9,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["a","GHC.Types.Int"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":30,"startCol":9,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800759","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":30,"startCol":18,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800758","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":8,"endLine":8,"endCol":8,"startCol":1,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["Lib.safeDiv","lq_tmp$x##441:GHC.Types.Int -> lq_tmp$x##442:GHC.Types.Int -> (GHC.Maybe.Maybe GHC.Types.Int)"]]],[{"spanInfo":{"startLine":8,"endLine":8,"endCol":22,"startCol":15,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[[null,"{VV : forall a .\n      {lq_tmp$x##512 : (GHC.Maybe.Maybe a) | isJust lq_tmp$x##512 <=> false} | VV == GHC.Maybe.Nothing}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":31,"startCol":15,"filename":"/Users/toriiwataru/Documents/progVerifierHoareLogic/liquidTest/src/Lib.hs"},"realSpan":true},[["lq_anf$##7205759403792800755","lq_tmp$x##466:{lq_tmp$x##469 : GHC.Types.Int | $k_##468[VV##467:=lq_tmp$x##469]} -> {lq_tmp$x##464 : (GHC.Maybe.Maybe {lq_tmp$x##469 : GHC.Types.Int | $k_##468[VV##467:=lq_tmp$x##469]}) | (isJust lq_tmp$x##464 <=> true)\n                                                                                                                                                                                            && fromJust lq_tmp$x##464 == lq_tmp$x##466}"]]]],"o_bots":[],"o_result":{"tag":"Safe"}}